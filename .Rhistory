getwd()
ls()
setwd("~/R")
ls()
install.packages("devtools")
library("devtools")
devtools::install_github("klutometis/roxygen")
library(roxygen2)
library("devtools")
devtools::install_github("klutometis/roxygen")
devtools::install_github("klutometis/roxygen")
library(roxygen2)
create("tisane-r")
create("tisaner")
getcwd()
cwd
getwd()
setwd("/Users/emjun/R/tisaner")
document()
setwd("..")
getwd()
setwd("./tisaner")
document()
setwd("..")
install(tisaner)
document()
getwd()
setwd("./tisaner/")
document()
setwd()
setwd(..)
setwd("..")
install(tisaner)
install("tisaner")
?cat-function
?
setwd("..")
getwd
getwd()
setwd("./R/tisaner")
document(0)
document()
setwd("..")
install("tisaner")
?cat_function
??cat_function
getwd
getwd()
setwd("./tisaner")
getwd()
roxygen2::roxygenise()
library(roxygen2)
roxygenise()
library(devtools)
library(roxygen2)
roxygenise
roxygenise()
document()
document()
getwd()
setwd("..")
install("tisaner")
?cat_function
getwd()
setwd("./tisaner")
devtools::load_all()
number_of_instances = 1
number_of_instances
is.object(number_of_instances)
getClass(number_of_instances)
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
usethis::use_testthat()
devtools::test()
devtools::check()
devtools::check()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::check()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::build()
devtools::check()
devtools::check()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
installed.packages()
packageVersion("roxygen")
packageVersion("roxygen2")
packageVersion("roxygen2")
devtools::test()
devtools::test()
clear
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::build()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
type(40)
is.numeric(40)
is.integer(40)
is.integer(40)
as.integer(40)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
integer(40)
as.integer(40)
as.integer(40)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::build()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
library(tisaner)
devtools::load_all(
)
library(tisaner)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
query(conceptualModel = cm, iv = measure_0, dv = measure_1)
library(jsonlite)
library(shiny)
library(tisaner)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
query(conceptualModel = cm, iv = measure_0, dv = measure_1)
source(~/.Rprofile)
source("~/.Rprofile")
library(tisaner)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
query(conceptualModel = cm, iv = measure_0, dv = measure_1)
library(tisaner)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
query(conceptualModel = cm, iv = measure_0, dv = measure_1)
library(tisaner)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
query(conceptualModel = cm, iv = measure_0, dv = measure_1)
library(tisaner)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
query(conceptualModel = cm, iv = measure_0, dv = measure_1)
library(tisaner)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
query(conceptualModel = cm, iv = measure_0, dv = measure_1)
library(tisaner)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
query(conceptualModel = cm, iv = measure_0, dv = measure_1)
library(tisaner)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
query(conceptualModel = cm, iv = measure_0, dv = measure_1)
library(tisaner)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
query(conceptualModel = cm, iv = measure_0, dv = measure_1)
library(tisaner)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
query(conceptualModel = cm, iv = measure_0, dv = measure_1)
library(tisaner)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
query(conceptualModel = cm, iv = measure_0, dv = measure_1)
library(tisaner)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
query(conceptualModel = cm, iv = measure_0, dv = measure_1)
library(tisaner)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
query(conceptualModel = cm, iv = measure_0, dv = measure_1)
library(tisaner)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
query(conceptualModel = cm, iv = measure_0, dv = measure_1)
library(tisaner)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
query(conceptualModel = cm, iv = measure_0, dv = measure_1)
library(tisaner)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
query(conceptualModel = cm, iv = measure_0, dv = measure_1)
library(tisaner)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
query(conceptualModel = cm, iv = measure_0, dv = measure_1)
library(tisaner)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
query(conceptualModel = cm, iv = measure_0, dv = measure_1)
library(tisaner)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
query(conceptualModel = cm, iv = measure_0, dv = measure_1)
runApp('app/conceptualModelDisambiguation')
output
output$info
input$info
}
runApp('app/conceptualModelDisambiguation')
runApp('app/conceptualModelDisambiguation')
# Define UI for application that draws a histogram
ui <- fluidPage(
tags$script(src = "conceptualModelDisambiguation.js"),
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Slider for DV  ----
# sliderInput(inputId = "dvType",
#             label = "Number of bins:",
#             min = 1,
#             max = 50,
#             value = 30)
selectInput("dvType", "Type of data", choices = unique(typeOptions)),
# selectInput("customername", "Customer", choices = NULL),
# selectInput("ordernumber", "Order number", choices = NULL),
tableOutput("data")
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Histogram ----
)
),
# tags$script(HTML("
#     fetch('input.json')
#     .then(resp => {
#     console.log('fetch json');
#     console.log(resp)
#     let output = resp.json();
#     load(output);
#     });
# ")),
actionButton("stop", "Done!")
)
runApp('app/conceptualModelDisambiguation')
runApp('app/conceptualModelDisambiguation')
runApp('app/conceptualModelDisambiguation')
runApp('app/conceptualModelDisambiguation')
runApp('app/conceptualModelDisambiguation')
runApp('app/conceptualModelDisambiguation')
json_data
