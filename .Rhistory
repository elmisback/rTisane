cm@graph <- updateGraph(cm)
# JSON input file
fileName = "simpleInput.json"
path = file.path(getwd(), fileName)
# Data file
dataPath = NULL
updates <- disambiguateConceptualModel(conceptualModel=cm, dv=dv, inputFilePath=path, dataPath=dataPath)
devtools::load_all()
library(tisaner)
# Construct Conceptual Model
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
# Update graph
cm@graph <- updateGraph(cm)
# JSON input file
fileName = "simpleInput.json"
path = file.path(getwd(), fileName)
# Data file
dataPath = NULL
updates <- disambiguateConceptualModel(conceptualModel=cm, dv=dv, inputFilePath=path, dataPath=dataPath)
devtools::load_all()
library(tisaner)
# Construct Conceptual Model
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
# Update graph
cm@graph <- updateGraph(cm)
# JSON input file
fileName = "simpleInput.json"
path = file.path(getwd(), fileName)
# Data file
dataPath = NULL
updates <- disambiguateConceptualModel(conceptualModel=cm, dv=dv, inputFilePath=path, dataPath=dataPath)
dvUpdated <- updates$updatedDV
cmUpdated <- updates$updatedConceptualModel
devtools::load_all()
library(tisaner)
# Construct Conceptual Model
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
# Update graph
cm@graph <- updateGraph(cm)
# JSON input file
fileName = "simpleInput.json"
path = file.path(getwd(), fileName)
# Data file
dataPath = NULL
updates <- disambiguateConceptualModel(conceptualModel=cm, dv=dv, inputFilePath=path, dataPath=dataPath)
devtools::load_all()
library(tisaner)
# Construct Conceptual Model
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
# Update graph
cm@graph <- updateGraph(cm)
# JSON input file
fileName = "simpleInput.json"
path = file.path(getwd(), fileName)
# Data file
dataPath = NULL
updates <- disambiguateConceptualModel(conceptualModel=cm, dv=dv, inputFilePath=path, dataPath=dataPath)
devtools::load_all()
library(tisaner)
# Construct Conceptual Model
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
# Update graph
cm@graph <- updateGraph(cm)
# JSON input file
fileName = "simpleInput.json"
path = file.path(getwd(), fileName)
# Data file
dataPath = NULL
updates <- disambiguateConceptualModel(conceptualModel=cm, dv=dv, inputFilePath=path, dataPath=dataPath)
devtools::load_all()
library(tisaner)
# Construct Conceptual Model
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
# Update graph
cm@graph <- updateGraph(cm)
# JSON input file
fileName = "simpleInput.json"
path = file.path(getwd(), fileName)
# Data file
dataPath = NULL
updates <- disambiguateConceptualModel(conceptualModel=cm, dv=dv, inputFilePath=path, dataPath=dataPath)
library(tisaner)
# Construct Conceptual Model
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
# Update graph
cm@graph <- updateGraph(cm)
# JSON input file
fileName = "simpleInput.json"
path = file.path(getwd(), fileName)
# Data file
dataPath = NULL
updates <- disambiguateConceptualModel(conceptualModel=cm, dv=dv, inputFilePath=path, dataPath=dataPath)
devtools::load_all()
library(tisaner)
# Construct Conceptual Model
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
# Update graph
cm@graph <- updateGraph(cm)
# JSON input file
fileName = "simpleInput.json"
path = file.path(getwd(), fileName)
# Data file
dataPath = NULL
updates <- disambiguateConceptualModel(conceptualModel=cm, dv=dv, inputFilePath=path, dataPath=dataPath)
dvUpdated <- updates$updatedDV
cmUpdated <- updates$updatedConceptualModel
tmp
tmp <- c()
tmp <- append(tmp, 1)
tmp
tmp <- append(tmp, 2)
tmp
tmpList <- list()
tmpList <- append(tmpList, "a"=1)
tmpList <- append(tmpList, "a":1)
tmpList <- append(tmpList, "a":{1})
list("A"=1)
tmpList <- append(tmpList, list("A"=1))
tmpList
tmpList <- append(tmpList, list("B"=2))
tmpList
tmpList$A
tmpList$B
tmpList <- append(tmpList, list("C"=c(3, 3, 3)))
tmpList
tmpList$C
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
library(devtools)
rlang::with_interactive(test_active_file())
options
options$dvClass
class(options@dvClass)
typeof (options@dvClass)
typeof(options@dvClass)
options$dvClass[[1]]
rlang::with_interactive(test_active_file())
options
options$ambiguous
rlang::with_interactive(test_active_file())
options$ambiguousRelationships
options
cause_relat
cm@relationships
rlang::with_interactive(test_active_file())
rClass
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
expectedValue
options$ambiguousOptions
options$ambiguousOptions$relatString
expectedKey
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
name
name <- "colName"
list (name=1)
list (str(name)=1)
list (eval(name)=1)
tmpList
tmpList <- list(name)
tmpList
tmpList <- list(name)[1]
tmplist
tmpList
tmpList[[1]]
rlang::with_interactive(test_active_file())
expectedValue
options$ambiguousOptions
options$ambiguousOptions[1]
options$ambiguousOptions[[1]]
options$ambiguousOptions[[1]][1]
options$ambiguousOptions[[1]][[1]]
options$ambiguousRelationships
options$ambiguousRelationships[[1]]
length(options$ambiguousRelationships)
length(options$ambiguousOptions)
nrow(options$ambiguousOptions)
nrows(options$ambiguousOptions)
ncol(options$ambiguousOptions)
ncols(options$ambiguousOptions)
options$ambiguousOptions
rlang::with_interactive(test_active_file())
options$ambiguousRelationships
options$ambiguousOptions
length(options$ambiguousRelationships)
length(options$ambiguousOptions)
rlang::with_interactive(test_active_file())
options$ambiguousOptions
options$ambiguousRelationships
rlang::with_interactive(test_active_file())
options$ambiguousOptions
options$ambiguousRelationships
opt <- c("A", "B")
opt
tmp <- c()
tmp <- append(tmp, opt)
tmp
tmp <- append(tmp, opt)
tm0p
tmp
name
as.string(name)
str(name)
list(str(name) = 1)
list(str(name)$chr = 1)
list(str(name)() = 1)
rlang::with_interactive(test_active_file())
options()
options$ambiguousOptions1
options$ambiguousOptions2
options
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
options$ambiguousOptions1
options$ambiguousOptions2
rlang::with_interactive(test_active_file())
?map
library(tisaner)
# Construct Conceptual Model
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
# Update graph
cm@graph <- updateGraph(cm)
# JSON input file
fileName = "simpleInput.json"
path = file.path(getwd(), fileName)
# Data file
dataPath = NULL
updates <- disambiguateConceptualModel(conceptualModel=cm, dv=dv, inputFilePath=path, dataPath=dataPath)
dvUpdated <- updates$updatedDV
cmUpdated <- updates$updatedConceptualModel
devtools::load_all()
library(tisaner)
# Construct Conceptual Model
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
# Update graph
cm@graph <- updateGraph(cm)
# JSON input file
fileName = "simpleInput.json"
path = file.path(getwd(), fileName)
# Data file
dataPath = NULL
updates <- disambiguateConceptualModel(conceptualModel=cm, dv=dv, inputFilePath=path, dataPath=dataPath)
devtools::load_all()
library(tisaner)
# Construct Conceptual Model
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
# Update graph
cm@graph <- updateGraph(cm)
# JSON input file
fileName = "simpleInput.json"
path = file.path(getwd(), fileName)
# Data file
dataPath = NULL
updates <- disambiguateConceptualModel(conceptualModel=cm, dv=dv, inputFilePath=path, dataPath=dataPath)
devtools::load_all()
library(tisaner)
# Construct Conceptual Model
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
# Update graph
cm@graph <- updateGraph(cm)
# JSON input file
fileName = "simpleInput.json"
path = file.path(getwd(), fileName)
# Data file
dataPath = NULL
updates <- disambiguateConceptualModel(conceptualModel=cm, dv=dv, inputFilePath=path, dataPath=dataPath)
dvUpdated <- updates$updatedDV
cmUpdated <- updates$updatedConceptualModel
uncertainRelationships
library(tisaner)
# Construct Conceptual Model
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- numeric(unit=unit, name="measure_0")
measure_1 <- numeric(unit=unit, name="measure_1")
cause_relat <- causes(measure_0, measure_1)
cm <- assume(cause_relat, cm)
# Update graph
cm@graph <- updateGraph(cm)
# JSON input file
fileName = "simpleInput.json"
# path = file.path(getwd(), fileName)
path = "/Users/emjun/Git/tisaner/tests/testthat/test_input.json"
# Data file
dataPath = NULL
updates <- disambiguateConceptualModel(conceptualModel=cm, dv=dv, inputFilePath=path, dataPath=dataPath)
dvUpdated <- updates$updatedDV
cmUpdated <- updates$updatedConceptualModel
uncertainRelationships
getwd()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
values
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
values
devtools::load_all()
?pmap
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
reactiveValuesToList(input)
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
values
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
input
input$tabset
reactive(input$tabset)
output
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
cmInputs
cmInputs$x
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
cmInputs
cmInputs$uncertainRelationships
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
cmInputs
cmInputs$uncertainRelationships
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
cmInputs
cmInputs$x
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
cmInputs
cmInputs$uncertainRelationships
userInput
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
i
uncertainRelationships
uncertainRelationships[[i]]
input
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
updates
updates$uncertainRelationships()
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
updates
updates
updates$uncertainRelationships
updates$uncertainRelationships[[1]]
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
updates
devtools::load_all()
source("~/Git/tisaner/examples/simpleDisambiguation.R", echo=TRUE)
rlang::with_interactive(test_active_file())
cm
cm@relationships
rlang::with_interactive(test_active_file())
cm@relationships
rlang::with_interactive(test_active_file())
cm@relationships
test_that("Conceptual model updated after disambiguation properly", {
})
rlang::with_interactive(test_active_file())
values
#' Returns handle to variable whose name we know
#'
#' Helper function for navigatin and updating a Conceptual Model
#' @param conceptualModel ConceptualModel with a variable of interest.
#' @param name character. Name of variable we would like a handle to.
#' @keywords
#' @examples
#' getVariable()
getVariable <- function(conceptualModel, name) {
cause = NULL
effect = NULL
for (vars in )
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
vars
length(vars)
nrows(varas)
nrows(vars)
vars[[1]]
vars[[1]][1]
vars[[1]][2]
length(vars[[1]])
rlang::with_interactive(test_active_file())
variables
conceptualModel@relationships
rlang::with_interactive(test_active_file())
vars
rlang::with_interactive(test_active_file())
vars
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
vars
vars[[1]]
stringr::str_split(vars[[1]], "Assume ")
stringr::str_split(vars[[1]], "Assume ")[[1]]
stringr::str_split(vars[[1]], "Assume ")[[1]][1]
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
br
nr
"Assume " %in% nr
"Assume" %in% nr
str_detect
stringr::str_detect(nr, "Assume")
rlang::with_interactive(test_active_file())
vars
stringr::str_split(vars[1], " causes ")
stringr::str_split(vars, " causes ")
vars <- stringr::str_split(vars, " causes ")[[1]]
vars
rlang::with_interactive(test_active_file())
cause
effect
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
variables
c(cause) in variables
c(cause) %in% variables
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
