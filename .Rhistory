rlang::with_interactive(test_active_file())
# Education is IV, Income is DV
# Need to disambiguate relationship between Education and Income, between Sex and Income in conceptual model
query(conceptualModel=cm, iv=edu, dv=income, data="examples/data/2019_WA_income.csv")
library(devtools)
pid <- Participant("ID")
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
load(rTisane)
devtools::load_all()
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("~/Git/tisaner/examples/startStatisticalModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/examples/startStatisticalModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/startStatisticalModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/examples/startStatisticalModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/startStatisticalModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/startStatisticalModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/startStatisticalModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/startStatisticalModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/examples/startStatisticalModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/startStatisticalModelDisambiguation.R", echo=TRUE)
modal
c
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/startStatisticalModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/startStatisticalModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/startStatisticalModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("/Users/emjun/Git/tisaner/model.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
/Users/emjun/Git/tisaner/model.R
source("~/Git/tisaner/examples/example2.R", echo=TRUE)
l1 <- list(1,2)
length(l1)
typeof(length(l1))
v1 <- None
v1 <- NULL
v1
test_file("test_variable_construction.R")
test_file(path="test_variable_construction.R")
cwd
getcwd()
getwd()
test_file(path"tests/testthat/test_variable_construction.r")
test_file(path"tests/testthat/test_variable_construction.R")
test_file(path="tests/testthat/test_variable_construction.R")
test_file(path="tests/testthat/test_variable_construction.R")
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
type(v1)
class(v1)
v1
class(v2)
class(l1)
typeof(list)
class(l1) == "list"
l1 != NULL
(l1 != NULL)
l1 == NULL
l1 is NUL
l1 is NULL
l1 is "NULL"
is.null(l1)
l1
v1
is.null(v1)
not is.null(v1)
!is.null(v1)
!is.null(v1)
test_file(path="tests/testthat/test_variable_construction.R")
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
integer(5)
as.integer(5)
v2 = 5
v2
typeof(v2)
class(v2) == "numeric"
class(v2) == "integer"
class(v2) == "doulbe"
class(v2) == "double"
as.integer(v2)
as.integer(5)
v3
v2
as.integer(5.4)
as.integer(5.5)
as.integer(5.8)
integer(5)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
reticulate::install_miniconda()
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
reticulate::install_miniconda()
reticulate::install_miniconda(force = TRUE)
reticulate::install_miniconda(force = TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
library(reticulate)
use_python("/usr/local/bin/python3")
use_python("/Users/emjun/.pyenv/shims/python")
library(reticulate)
reticulate::install_miniconda()
py_install("dash", pip=TRUE)
py_install("dash_daq", pip=TRUE)
py_install("dash_bootstrap_components", pip=TRUE)
py_install("flask", pip=TRUE)
py_install("plotly", pip=TRUE)
py_install("tisanecodegenerator", pip=TRUE)
import("dash")
reticulate::install_miniconda()
reticulate::install_miniconda()
reticulate::install_python()
reticulate::install_miniconda()
import("dash")
reticulate::install_miniconda(force=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
reticulate::install_miniconda()
import("dash")
py_install("dash", pip=TRUE)
import("dash")
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
source("~/Git/tisaner/env_setup.R", echo=TRUE)
source("~/Git/tisaner/examples/exampleHealth.R", echo=TRUE)
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
library(devtools)
rlang::with_interactive(test_active_file())
options$dvOptions
continuousType
rlang::with_interactive(test_active_file())
familyFunctions
"Gaussian" %in% familyFunctions
rlang::with_interactive(test_active_file())
grade_binary
rlang::with_interactive(test_active_file())
familyFunctions
rlang::with_interactive(test_active_file())
condition@cardinality
rlang::with_interactive(test_active_file())
grade
grade@cardinality
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
ixn
ixn@units
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
devtools::document()
roxygen2::roxygenise()
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
ambig_relat
ambig_relat@when
is.null(ambig_relat@when)
type(ambig_relat@when)
class(ambig_relat@when)
rlang::with_interactive(test_active_file())
ambig_relat@lhs
ambig_relat@when
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
ambig_relat@when
is.null(ambig_relat)
is.null(ambig_relat@when)
is.null(ambig_relat@then)
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
ambig_relat@when
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
cm <- ConceptualModel()
cm <- assume(cm, causes(measure_0, measure_2))
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- continuous(unit=unit, name="measure_0")
measure_1 <- continuous(unit=unit, name="measure_1")
measure_2 <- continuous(unit=unit, name="measure_2")
measure_3 <- continuous(unit=unit, name="measure_3")
measure_4 <- continuous(unit=unit, name="measure_4")
cm <- assume(cm, causes(measure_0, measure_1))
cm <- assume(cm, causes(measure_1, measure_2))
cm <- hypothesize(cm, causes(measure_0, measure_2))
cm@graph <- updateGraph(cm)
cm <- ConceptualModel()
cm <- assume(cm, causes(measure_0, measure_2))
cm <- assume(cm, causes(measure_2, measure_0))
cm@graph <- updateGraph(cm)
res <- checkConceptualModel(cm, measure_0, measure_2)
expect_named(res, c("isValid", "reason"))
expect_false(res$isValid)
res <- checkConceptualModel(cm, measure_2, measure_0)
expect_named(res, c("isValid", "reason"))
expect_false(res$isValid)
cm <- ConceptualModel()
cm <- assume(cm, causes(measure_0, measure_2))
cm <- assume(cm, causes(measure_2, measure_0))
cm@graph <- updateGraph(cm)
res <- checkConceptualModel(cm, measure_0, measure_2)
RES
res
cm <- ConceptualModel()
cm <- assume(cm, causes(measure_0, measure_2))
cm <- assume(cm, causes(measure_2, measure_0))
cm@graph <- updateGraph(cm)
checkConceptualModel(cm, measure_0, measure_2)
prettyprint(res)
format(res)
stop("hi")
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
options
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
options$ambiguousOptions1
options$ambiguousOptions1
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
options$ambiguousOptions1
options$ambiguousOptions
options$ambiguousOptions2
options
rlang::with_interactive(test_active_file())
options
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
rlang::with_interactive(test_active_file())
shinyAppTemplate("myapp")
library(shiny)
shinyAppTemplate("myapp")
runApp(shinyApp(ui = ui, server = server))
runApp('myapp')
runtests()
shiny::runTests("myapp")
shinytest2::use_shinytest2("../", setup = TRUE)
cwd()
wd()
shinytest2::use_shinytest2("../", setup = TRUE)
shinytest2::use_shinytest2("./", setup = TRUE)
shiny::runTests("myapp")
shiny::runTests("myapp")
# Load application support files into testing environment
shinytest2::load_app_env()
shiny::runTests("myapp")
shiny::runTests("myapp")
shiny::runTests("myapp")
wd
wd()
runApp("./myapp")
wd
wd()
runApp(myapp)
runApp("myapp")
runApp("myapp")
runApp("myapp")
runApp("myapp")
runApp("myapp")
R.utils::getAbsolutePath("input.json")
R.utils::getAbsolutePath("../input.json")
?shinyApp onStart
runApp(conceptualDisambiguation)
wd
wd()
runApp("./conceptualDisambiguation")
runApp("./conceptualDisambiguation")
wd()
runApp("./conceptualDisambiguation")
runApp("./conceptualDisambiguation")
options(shiny.launch.browser = .rs.invokeShinyWindowExternal)
library(shiny)
library(plotly)
# For development
devtools::load_all()
runApp("./conceptualDisambiguation")
library(rTisane)
reload(".")
library(rTisane)
runApp("./conceptualDisambiguation")
runApp("./conceptualDisambiguation")
reload(".")
runApp("./conceptualDisambiguation")
runApp("./conceptualDisambiguation")
runApp("./conceptualDisambiguation")
wd()
wd()
runApp("./conceptualDisambiguation")
wd("input.json")
wd() + "input.json"
wd() + "input.json"
runApp("./conceptualDisambiguation")
runApp("./conceptualDisambiguation")
runApp("./conceptualDisambiguation")
runApp("./conceptualDisambiguation")
wd(0)
wd()
wd()
runApp("./conceptualDisambiguation")
runApp("./conceptualDisambiguation")
runApp("./conceptualDisambiguation")
runApp("./conceptualDisambiguation")
library(rTisane)
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
# Construct Conceptual Model
cm <- ConceptualModel()
options(shiny.launch.browser = .rs.invokeShinyWindowExternal)
library(rTisane)
library(rTisane)
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
devtools::load_all()
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
as.integer(1)
as.integer(1)
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
devtools::load_all()
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
devtools::load_all()
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
devtools::load_all()
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
devtools::load_all()
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
devtools::load_all()
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
source("~/Git/tisaner/examples/startConceptualModelDisambiguation.R", echo=TRUE)
library(rTisane)
cm <- ConceptualModel()
unit <- Unit("person")
measure_0 <- continuous(unit=unit, name="measure_0")
measure_0 <- continuous(unit=unit, name="measure_0")
unit <- Unit("person")
library(rTisane)
unit <- Unit("person")
categories(unit, "cat", cardinality = 1)
View(measure_1)
categories(unit, "cat", cardinality = 1)
